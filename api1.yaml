openapi: "3.0.0"
info:
  version: 0.3.0
  title: MAAM Admin Rest API
  license:
    name: Apache2.0
servers:
  - url: http://localhost:3000/v1
paths:
  /apikeys:
    post:
      summary: Create an apikey
      operationId: createApiKey
      tags:
        - apikey
      requestBody:
        required: true
        content:
          application/json:
            schema:  
              title: ApiKeyRequest 
              type: object
              required:
              - name
              properties:
                name:
                  type: string
            example:
              name: "new user apikey"
      responses:
        '201':
          description: ApiKey created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Base2xxResponse'
                  - type: object
                    title: ApiKey
                    required:
                      - data
                    properties:
                      data:
                        $ref: '#/components/schemas/ApiKey'
    get:
      summary: List all apikeys
      operationId: listApiKeys
      tags:
        - apikey
      parameters:
        - name: page
          in: query
          description: Request a page with limit.
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: How many consumers to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '201':
          description: A paged array of apikeys
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Base2xxResponse'
                  - type: object
                    title: ApiKey
                    required:
                      - data
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ApiKey'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /apikeys/{apiKeyId}:
    post:
      summary: Enable/Disable an apikey
      operationId: enableApiKeyById
      tags:
        - apikey
      parameters:
        - $ref: "#/components/parameters/apiKeyId"
      requestBody:
        required: true
        content:
          application/json:
            schema:  
              type: object
              properties:
                enable:
                  type: string
                  enum: ["0", "1"]
            example:
              enable: "0"
      responses:
        '201':
          description: Retrieves apikey from the id
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Base2xxResponse'
                  - type: object
                    title: ApiKey
                    required:
                      - data
                    properties:
                      data:
                        $ref: '#/components/schemas/ApiKey'
    get:
      summary: Info for a specific apikey
      operationId: showApiKeyById
      tags:
        - apikey
      parameters:
        - $ref: "#/components/parameters/apiKeyId"
      responses:
        '201':
          description: Retrieves apikey from the id
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Base2xxResponse'
                  - type: object
                    title: ApiKey
                    required:
                      - data
                    properties:
                      data:
                        $ref: '#/components/schemas/ApiKey'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /apikey/{apiKeyId}/credits:
    post:
      summary: Add credits for a specific apikey
      operationId: addCreditsConsumerById
      tags:
        - credit
      parameters:
        - $ref: "#/components/parameters/apiKeyId"
      requestBody:
        required: true
        content:
          application/json:
            schema:  
              title: Credit Request
              type: object
              required:
              - credits
              properties: 
                credits:
                  type: integer
                  format: int32
            example:
              credits: 1000
      responses:
        '200':
          description: Added credits to api keys
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Base2xxResponse'
                  - type: object
                    title: ApiKey
                    required:
                      - data
                    properties:
                      data:
                        $ref: "#/components/schemas/ApiKey"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get services for a specific apikey
      operationId: getServicesApiKeyById
      tags:
        - credit
      parameters:
        - $ref: "#/components/parameters/apiKeyId"      
      responses:
        '200':
          description: Get services for the apikey with api key id
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Base2xxResponse'
                  - type: object
                    title: ApiKey
                    required:
                      - data
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ApiKey"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /apikey/{apiKeyId}/services:
    post:
      summary: Add a new service for a specific consumer
      operationId: addServiceConsumerById
      tags:
        - service
      parameters:
        - $ref: "#/components/parameters/apiKeyId"
      requestBody:
        required: true
        content:
          application/json:
            schema:  
              title: ServiceRequest
              type: object
              required:
              - name
              properties:
                name:
                  type: string
            example:
              name: "mare"
      responses:
        '200':
          description: Registered apikeys to service successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Base2xxResponse'
                  - type: object
                    title: ApiKey
                    required:
                      - data
                    properties:
                      data:
                        $ref: "#/components/schemas/ApiKey"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get services for a specific apikey
      operationId: getServicesApiKeyById
      tags:
        - service
      parameters:
        - $ref: "#/components/parameters/apiKeyId"      
      responses:
        '200':
          description: Get services for the apikey with api key id
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Base2xxResponse'
                  - type: object
                    title: ApiKey
                    required:
                      - data
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ApiKey"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /apikeys/{apiKeyId}/services/{serviceName}/routes:
    post:
      summary: Add a new route for a specific service of a specific apikey
      operationId: addRouteServiceApiKeyId
      tags:
        - route
      parameters:
        - $ref: "#/components/parameters/apiKeyId"
        - $ref: "#/components/parameters/serviceName"
      requestBody:
        required: true
        content:
          application/json:
            schema:  
              $ref: "#/components/schemas/Route"
      responses:
        '200':
          description: Register apikey to a route in a service successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Base2xxResponse'
                  - type: object
                    title: ApiKey
                    required:
                      - data
                    properties:
                      data:
                        $ref: "#/components/schemas/ApiKey"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get routes for a service of a specific apikey
      operationId: getRoutesServiceByNameApiKeyId
      tags:
        - route
      parameters:
        - $ref: "#/components/parameters/apiKeyId"      
        - $ref: "#/components/parameters/serviceName"
      responses:
        '200':
          description: Get services for the consumer with api key id
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Base2xxResponse'
                  - type: object
                    title: ApiKey
                    required:
                      - data
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ApiKey"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  parameters:
    apiKeyId:
      name: apiKeyId 
      in: path
      required: true
      description: The id of the consumer
      schema:
        type: string
    serviceName:
      name: serviceName
      in: path
      required: true
      description: The name of the service 
      schema:
        type: string
  schemas:
    BaseResponse:
      title: Base response to include required fields
      type: object
      required:
        - api_version
        - request_id
        - method
        - status
        - code
      properties:
        api_version: 
          description: Version of the API being used
          type: string
          example: 1.0
        request_id:
          description: Unique platform supplied identifier for the request/response (regardless of whether the response is a success or an error). This is useful for correlating service logs with individual responses received by a client.
          type: string
          example: eebaf5e1919745a4855e0d80b70638ec
        status:
          description: Status of the request. For a 201, the status will be `"ok"` and clients should expect that the `data` property will contain a JSON object complete with a URI to download results specific to the endpoint.
          type: string
          example: ok
        code:
          description: Top-level HTTP-like code representing the state of service upon response.
          type: integer
          format: int32
          example: 200
        context:
          description: Echo of `context` value set by client request. Useful for correlating responses with requests.
          type: string
          example: "my-request-2018-11-15T15:53:00+05:00"
        method:
          description: Operation performed on the request
          type: string
          example: "consumers.post"
    
    Base2xxResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          title: Base response to include required fields
          properties:
            job_id:
              description: Unique service supplied identifier for a launched job. This is useful for correlating server logs with individual responses received by a client.
              type: string
              example: 2891ed0d1b474d1cb38f0ccff352ce13
            message:
              description: Status message associated with a request and related to the HTTP-like `code`. The intent of `message` is to surface a human-readable message for debugging, auditing, or informational purposes and does not replace the contents of `error` when errors are encountered.
              type: string
              example:  The request has been fulfilled and resulted in a new resource being created.
            info:
              description: Acknowledgements and copyright information for use in third party applications.
              type: object
              required:
                - copyrights
                - acknowledgements
                - licenses
              properties:
                copyrights:
                  type: array
                  items: 
                    type: string
                  minItems: 1
                  uniqueItems: true
                acknowledgements:
                  type: array
                  items: 
                    type: string
                  minItems: 1
                  uniqueItems: true
                licenses:
                  type: array
                  items: 
                    type: string
                  minItems: 1
                  uniqueItems: true
    Route:
      title: Route
      type: object
      required:
        - name
        - path
      properties:
        name:
          type: string
        path:
          type: string
    Service:
      title: Service
      type: object
      required:
        - name
        - routes
      properties:
        name:
          type: string
        routes:
          type: array
          items:
            $ref: "#/components/schemas/Route"
    ApiKey:
      title: ApiKey
      type: object
      required:
        - key_id
        - services
        - credits
        - enabled
      properties:
        key_id:
          type: string
        credits:
          type: integer
          format: int32
        enabled:
          type: string
          enum: ["1", "0"]
        services:
          type: array
          items:
            $ref: "#/components/schemas/Service"
    Error:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              title: Error in maam admin api
              required:
              - code
              - message
              properties:
                code:
                  type: integer
                  format: int32
                message:
                  type: string
